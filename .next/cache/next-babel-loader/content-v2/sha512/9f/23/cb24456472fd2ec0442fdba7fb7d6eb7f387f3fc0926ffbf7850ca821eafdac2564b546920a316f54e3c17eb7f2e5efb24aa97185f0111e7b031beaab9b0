{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"C:/Users/Rowen/Desktop/expo/fscit-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Rowen\\\\Desktop\\\\expo\\\\fscit-nextjs\\\\pages\\\\warehouse-management\\\\warehouse-users\\\\WareHouseUserForm.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Controls from \"../../../components/controls/Controls\";\nimport { useForm, Form } from \"../../../components/useForm\";\nimport api from \"../../../Services/api\";\nvar initialFValues = {\n  id: 0,\n  uuid: \"\",\n  warehouse_id: \"\",\n  user_id: \"\",\n  user_name: \"\",\n  warehouse_name: \"\",\n  is_active: \"\",\n  created_by: \"\",\n  updated_by: \"\"\n};\nexport default function wareHouseUserForm(props) {\n  _s();\n\n  var addOrEdit = props.addOrEdit,\n      recordForEdit = props.recordForEdit;\n\n  var _useState = useState([]),\n      warehouseName = _useState[0],\n      setwarehouseName = _useState[1];\n\n  var validate = function validate() {\n    var fieldValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : values;\n\n    var temp = _objectSpread({}, errors);\n\n    if (\"warehouse_name\" in fieldValues) temp.warehouse_name = fieldValues.warehouse_name ? \"\" : \"This field is required.\";\n    if (\"user_name\" in fieldValues) temp.user_name = fieldValues.user_name ? \"\" : \"This field is required.\";\n    if (\"user_id\" in fieldValues) temp.user_id = fieldValues.user_id ? \"\" : \"This field is required.\";\n    setErrors(_objectSpread({}, temp));\n    if (fieldValues == values) return Object.values(temp).every(function (x) {\n      return x == \"\";\n    });\n  };\n\n  var _useForm = useForm(initialFValues, true, validate),\n      values = _useForm.values,\n      setValues = _useForm.setValues,\n      errors = _useForm.errors,\n      setErrors = _useForm.setErrors,\n      handleInputChange = _useForm.handleInputChange,\n      resetForm = _useForm.resetForm;\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n\n  var onHandlerShowID = function onHandlerShowID() {\n    api.instance.get(\"/wms/warehouse/warehouse-user-showid/\" + initialFValues.warehouse_id).then(function (resp) {\n      console.log(resp.data);\n      setwarehouseName(resp.data);\n    })[\"catch\"](function (err) {\n      console.log(err.data);\n    });\n  };\n\n  var onSelectWarehouseName = function onSelectWarehouseName() {\n    api.instance.get(\"/wms/warehouse/warehouse-list-active\").then(function (resp) {\n      console.log(resp.data);\n      setwarehouseName(resp.data);\n    })[\"catch\"](function (err) {\n      console.log(err.data);\n    });\n  };\n\n  useEffect(function () {\n    onHandlerShowID();\n    onSelectWarehouseName();\n    if (recordForEdit != null) setValues(_objectSpread({}, recordForEdit));\n  }, [recordForEdit]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 12,\n        sm: 12,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Controls.Select, {\n          name: \"warehouse_id\",\n          label: \"Warehouse Name\",\n          value: values.warehouse_id,\n          onChange: handleInputChange,\n          options: warehouseName,\n          error: errors.area_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"warehouse_name\",\n          label: \"Warehouse Name\",\n          value: values.warehouse_name,\n          onChange: handleInputChange,\n          error: errors.warehouse_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"user_name\",\n          label: \"User Name\",\n          value: values.user_name,\n          onChange: handleInputChange,\n          error: errors.user_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Checkbox, {\n          name: \"is_active\",\n          label: \"Active\",\n          value: values.is_active == 0 ? false : true,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Controls.Button, {\n        type: \"submit\",\n        text: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n        text: \"Reset\",\n        color: \"default\",\n        onClick: resetForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(wareHouseUserForm, \"kiYWVlnctD2Qk9M95fs7KI+6alk=\", false, function () {\n  return [useForm];\n});","map":{"version":3,"sources":["C:/Users/Rowen/Desktop/expo/fscit-nextjs/pages/warehouse-management/warehouse-users/WareHouseUserForm.js"],"names":["React","useState","useEffect","Grid","Controls","useForm","Form","api","initialFValues","id","uuid","warehouse_id","user_id","user_name","warehouse_name","is_active","created_by","updated_by","wareHouseUserForm","props","addOrEdit","recordForEdit","warehouseName","setwarehouseName","validate","fieldValues","values","temp","errors","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault","onHandlerShowID","instance","get","then","resp","console","log","data","err","onSelectWarehouseName","area_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Controls from \"../../../components/controls/Controls\";\r\nimport { useForm, Form } from \"../../../components/useForm\";\r\nimport api from \"../../../Services/api\";\r\n\r\nconst initialFValues = {\r\n  id: 0,\r\n  uuid: \"\",\r\n  warehouse_id: \"\",\r\n  user_id: \"\",\r\n  user_name: \"\",\r\n  warehouse_name: \"\",\r\n  is_active: \"\",\r\n  created_by: \"\",\r\n  updated_by: \"\",\r\n};\r\n\r\nexport default function wareHouseUserForm(props) {\r\n  const { addOrEdit, recordForEdit } = props;\r\n  const [warehouseName, setwarehouseName] = useState([]);\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n    if (\"warehouse_name\" in fieldValues)\r\n      temp.warehouse_name = fieldValues.warehouse_name\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n    if (\"user_name\" in fieldValues)\r\n      temp.user_name = fieldValues.user_name ? \"\" : \"This field is required.\";\r\n    if (\"user_id\" in fieldValues)\r\n      temp.user_id = fieldValues.user_id ? \"\" : \"This field is required.\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    if (fieldValues == values) return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\r\n    useForm(initialFValues, true, validate);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      addOrEdit(values, resetForm);\r\n    }\r\n  };\r\n  const onHandlerShowID = () => {\r\n    api.instance\r\n      .get(\r\n        \"/wms/warehouse/warehouse-user-showid/\" + initialFValues.warehouse_id\r\n      )\r\n      .then((resp) => {\r\n        console.log(resp.data);\r\n        setwarehouseName(resp.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.data);\r\n      });\r\n  };\r\n  const onSelectWarehouseName = () => {\r\n    api.instance\r\n      .get(\"/wms/warehouse/warehouse-list-active\")\r\n      .then((resp) => {\r\n        console.log(resp.data);\r\n        setwarehouseName(resp.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.data);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    onHandlerShowID();\r\n    onSelectWarehouseName();\r\n    if (recordForEdit != null)\r\n      setValues({\r\n        ...recordForEdit,\r\n      });\r\n  }, [recordForEdit]);\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Grid container>\r\n        <Grid item lg={12} sm={12} xs={12}>\r\n          <Controls.Select\r\n            name=\"warehouse_id\"\r\n            label=\"Warehouse Name\"\r\n            value={values.warehouse_id}\r\n            onChange={handleInputChange}\r\n            options={warehouseName}\r\n            error={errors.area_id}\r\n          />\r\n          <Controls.Input\r\n            name=\"warehouse_name\"\r\n            label=\"Warehouse Name\"\r\n            value={values.warehouse_name}\r\n            onChange={handleInputChange}\r\n            error={errors.warehouse_name}\r\n          />\r\n          <Controls.Input\r\n            name=\"user_name\"\r\n            label=\"User Name\"\r\n            value={values.user_name}\r\n            onChange={handleInputChange}\r\n            error={errors.user_name}\r\n          />\r\n          <Controls.Checkbox\r\n            name=\"is_active\"\r\n            label=\"Active\"\r\n            value={values.is_active == 0 ? false : true}\r\n            onChange={handleInputChange}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <div>\r\n        <Controls.Button type=\"submit\" text=\"Submit\" />\r\n        <Controls.Button text=\"Reset\" color=\"default\" onClick={resetForm} />\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}