{"ast":null,"code":"import axios from \"axios\";\nconst baseURL = \"http://127.0.0.1:8000/api\"; //local development\n\nconst accessToken = \"2f1cdd919a0651421a7e7e0c7bcf3d52908baf97ece2ff36acf7e19ed7aebe8a\";\nconst instance = axios.create({\n  baseURL: baseURL,\n  headers: {\n    // \"Content-Type\": \"application/json\",\n    Accept: \"application/json\" // Authorization: \"Bearer <token_here>\",\n\n  }\n});\ninstance.interceptors.request.use(function (config) {\n  const userToken = localStorage.getItem(\"token\"); //config.headers.Authorization = userToken;\n\n  return config;\n}); // instance.interceptors.request.use(\n//   async (config) => {\n//     const userToken = await localStorage.getItem(\"token\");\n//     if (userToken != null) {\n//       config.headers.token = userToken;\n//     }\n//     return config;\n//   },\n//   (error) => Promise.reject(error)\n// );\n\nfunction httpMsg(obj, statuscode, msg) {\n  if (statuscode === 401) {\n    obj.$store.dispatch(\"logout\").then(() => {\n      obj.$router.push(\"/login\");\n    });\n  } else if (statuscode === 200) {\n    console.log(msg);\n  } else if (statuscode === undefined) {\n    console.log(\"Please contact administrator!!!\");\n  } else {\n    console.log(msg);\n  }\n}\n\nexport default {\n  instance,\n  baseURL,\n  httpMsg\n};","map":{"version":3,"sources":["C:/Users/Rowen/Desktop/expo/fscit-nextjs/Services/api.js"],"names":["axios","baseURL","accessToken","instance","create","headers","Accept","interceptors","request","use","config","userToken","localStorage","getItem","httpMsg","obj","statuscode","msg","$store","dispatch","then","$router","push","console","log","undefined"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,2BAAhB,C,CAA6C;;AAC7C,MAAMC,WAAW,GACf,kEADF;AAGA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC5BH,EAAAA,OAAO,EAAEA,OADmB;AAE5BI,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,MAAM,EAAE,kBAFD,CAGP;;AAHO;AAFmB,CAAb,CAAjB;AASAH,QAAQ,CAACI,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAAUC,MAAV,EAAkB;AAClD,QAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAlB,CADkD,CAElD;;AAEA,SAAOH,MAAP;AACD,CALD,E,CAMA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEA,SAASI,OAAT,CAAiBC,GAAjB,EAAsBC,UAAtB,EAAkCC,GAAlC,EAAuC;AACrC,MAAID,UAAU,KAAK,GAAnB,EAAwB;AACtBD,IAAAA,GAAG,CAACG,MAAJ,CAAWC,QAAX,CAAoB,QAApB,EAA8BC,IAA9B,CAAmC,MAAM;AACvCL,MAAAA,GAAG,CAACM,OAAJ,CAAYC,IAAZ,CAAiB,QAAjB;AACD,KAFD;AAGD,GAJD,MAIO,IAAIN,UAAU,KAAK,GAAnB,EAAwB;AAC7BO,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACD,GAFM,MAEA,IAAID,UAAU,KAAKS,SAAnB,EAA8B;AACnCF,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACD,GAFM,MAEA;AACLD,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACD;AACF;;AAED,eAAe;AACbd,EAAAA,QADa;AAEbF,EAAAA,OAFa;AAGba,EAAAA;AAHa,CAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseURL = \"http://127.0.0.1:8000/api\"; //local development\r\nconst accessToken =\r\n  \"2f1cdd919a0651421a7e7e0c7bcf3d52908baf97ece2ff36acf7e19ed7aebe8a\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: baseURL,\r\n  headers: {\r\n    // \"Content-Type\": \"application/json\",\r\n    Accept: \"application/json\",\r\n    // Authorization: \"Bearer <token_here>\",\r\n  },\r\n});\r\n\r\ninstance.interceptors.request.use(function (config) {\r\n  const userToken = localStorage.getItem(\"token\");\r\n  //config.headers.Authorization = userToken;\r\n\r\n  return config;\r\n});\r\n// instance.interceptors.request.use(\r\n//   async (config) => {\r\n//     const userToken = await localStorage.getItem(\"token\");\r\n\r\n//     if (userToken != null) {\r\n//       config.headers.token = userToken;\r\n\r\n//     }\r\n\r\n//     return config;\r\n//   },\r\n//   (error) => Promise.reject(error)\r\n// );\r\n\r\nfunction httpMsg(obj, statuscode, msg) {\r\n  if (statuscode === 401) {\r\n    obj.$store.dispatch(\"logout\").then(() => {\r\n      obj.$router.push(\"/login\");\r\n    });\r\n  } else if (statuscode === 200) {\r\n    console.log(msg);\r\n  } else if (statuscode === undefined) {\r\n    console.log(\"Please contact administrator!!!\");\r\n  } else {\r\n    console.log(msg);\r\n  }\r\n}\r\n\r\nexport default {\r\n  instance,\r\n  baseURL,\r\n  httpMsg,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}